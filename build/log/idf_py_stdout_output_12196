[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D G:\esp\Esp32\bai2\build\bootloader\esp-idf\esptool_py && G:\esp\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe G:/esp/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 G:/esp/Esp32/bai2/build/bootloader/bootloader.bin"
Bootloader binary size 0x6710 bytes. 0x8f0 bytes (8%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/app_main.c.obj
G:/esp/Esp32/bai2/main/app_main.c:118:13: warning: 'smartconfig_task' defined but not used [-Wunused-function]
  118 | static void smartconfig_task(void *parm) {
      |             ^~~~~~~~~~~~~~~~
G:/esp/Esp32/bai2/main/app_main.c:97:13: warning: 'initialise_wifi' defined but not used [-Wunused-function]
   97 | static void initialise_wifi(void) {
      |             ^~~~~~~~~~~~~~~
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Linking CXX executable smart_config.elf
[6/8] Generating binary image from built executable
esptool.py v4.5.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated G:/esp/Esp32/bai2/build/smart_config.bin
[7/8] cmd.exe /C "cd /D G:\esp\Esp32\bai2\build\esp-idf\esptool_py && G:\esp\Espressif\python_env\idf5.0_py3.11_env\Scripts\python.exe G:/esp/Espressif/frameworks/esp-idf-v5.0.2/components/partition_table/check_sizes.py --offset 0x8000 partition --type app G:/esp/Esp32/bai2/build/partition_table/partition-table.bin G:/esp/Esp32/bai2/build/smart_config.bin"
smart_config.bin binary size 0x31180 bytes. Smallest app partition is 0x100000 bytes. 0xcee80 bytes (81%) free.
[7/8] cmd.exe /C "cd /D G:\esp\Espressif\frameworks\esp-idf-v5.0.2\components\esptool_py && G:\esp\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=G:/esp/Espressif/frameworks/esp-idf-v5.0.2 -D SERIAL_TOOL=G:/esp/Espressif/python_env/idf5.0_py3.11_env/Scripts/python.exe;;G:/esp/Espressif/frameworks/esp-idf-v5.0.2/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=G:/esp/Esp32/bai2/build -P G:/esp/Espressif/frameworks/esp-idf-v5.0.2/components/esptool_py/run_serial_tool.cmake"
esptool esp32 -p COM5 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 smart_config.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.5.1
Serial port COM5
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: c8:f0:9e:f4:8a:18
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00041fff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26384 bytes to 16454...
Writing at 0x00001000... (50 %)
Writing at 0x000076ac... (100 %)
Wrote 26384 bytes (16454 compressed) at 0x00001000 in 0.9 seconds (effective 246.9 kbit/s)...
Hash of data verified.
Compressed 201088 bytes to 107416...
Writing at 0x00010000... (14 %)
Writing at 0x0001c513... (28 %)
Writing at 0x00021c8a... (42 %)
Writing at 0x0002780f... (57 %)
Writing at 0x0002db7e... (71 %)
Writing at 0x000378bf... (85 %)
Writing at 0x0003db5c... (100 %)
Wrote 201088 bytes (107416 compressed) at 0x00010000 in 2.6 seconds (effective 619.4 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 309.8 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
